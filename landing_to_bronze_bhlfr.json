{
    "name": "df_landing_to_bronze_bh",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "ds_bronze_bh_copybook",
                        "type": "DatasetReference"
                    },
                    "name": "BronzeSilvBhLfr"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "ds_bronze_common",
                        "type": "DatasetReference"
                    },
                    "name": "BronzesilvBHLfrsink"
                }
            ],
            "transformations": [
                {
                    "name": "DerivedColumnBhCopybook"
                },
                {
                    "name": "BronzeToSilverCopyBookselect"
                },
                {
                    "name": "derivedColumn1"
                },
                {
                    "name": "flatten1",
                    "description": "unrolling the shipment item"
                },
                {
                    "name": "SplitBasedOnBol"
                },
                {
                    "name": "OrderRank"
                },
                {
                    "name": "derivedColumn2"
                },
                {
                    "name": "RowSequence"
                },
                {
                    "name": "DenseRankForSourceLoadNumber"
                },
                {
                    "name": "AggregateToGetFirstRecord"
                },
                {
                    "name": "join1"
                }
            ],
            "scriptLines": [
                "parameters{",
                "     PARAMETER_CURRENT_TIMESTAMP as string",
                "}",
                "source(output(",
                "          Column_1 as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> BronzeSilvBhLfr",
                "flatten1 derive({HEADER-TYPE} = ltrim(rtrim(substring(Column_1, 1, 3))),",
                "          {TRANS-TYPE} = ltrim(rtrim(substring(Column_1, 4, 23))),",
                "          {SERIAL-KEY} = ltrim(rtrim(substring(Column_1, 24, 100))),",
                "          {MESSAGE-CREATE-DATE} = ltrim(rtrim(substring(Column_1, 124, 26))),",
                "          {CREATED-BY} = ltrim(rtrim(substring(Column_1, 150, 20))),",
                "          {MESSAGE-GUID} = ltrim(rtrim(substring(Column_1, 170, 50))),",
                "          {SHIPMENT-DATE} = ltrim(rtrim(substring(Column_1, 220, 8))),",
                "          {SHIPMENT-TIME} = ltrim(rtrim(substring(Column_1, 228, 8))),",
                "          {SHIPMENT-TYPE} = ltrim(rtrim(substring(Column_1, 236, 1))),",
                "          {ACTION-FLAG} = ltrim(rtrim(substring(Column_1, 237, 2))),",
                "          {OP-INVOLVED} = ltrim(rtrim(substring(Column_1, 239, 1))),",
                "          {BOL-COMBINED-FLAG} = ltrim(rtrim(substring(Column_1, 240, 1))),",
                "          {BOL-COMBINED-WITH} = ltrim(rtrim(substring(Column_1, 241, 70))),",
                "          {SHIP-COMPLETE} = ltrim(rtrim(substring(Column_1, 311, 1))),",
                "          {BOL-NUMBER} = ltrim(rtrim(substring(Column_1, 312, 20))),",
                "          {TOTAL-NO-ITEMS} = ltrim(rtrim(substring(Column_1, 332, 5))),",
                "          {TOTAL-NO-ITEMS-RDF} = ltrim(rtrim(substring(Column_1, 332, 5))),",
                "          {UNIT-OF-MEASURE-1} = ltrim(rtrim(substring(Column_1, 337, 3))),",
                "          {BOL-WGT} = ltrim(rtrim(substring(Column_1, 340, 8))),",
                "          {BOL-WGT-RDF} = ltrim(rtrim(substring(Column_1, 340, 8))),",
                "          {ACTUAL-WGT} = ltrim(rtrim(substring(Column_1, 348, 8))),",
                "          {ACTUAL-WGT-RDF} = ltrim(rtrim(substring(Column_1, 348, 8))),",
                "          {PACK-SLIP-NO} = ltrim(rtrim(substring(Column_1, 356, 20))),",
                "          PLANT = ltrim(rtrim(substring(Column_1, 376, 2))),",
                "          {SHIP-MODE} = ltrim(rtrim(substring(Column_1, 378, 2))),",
                "          {CLAIM-INDICATOR} = ltrim(rtrim(substring(Column_1, 380, 1))),",
                "          {INTERCOMPANY-IND} = ltrim(rtrim(substring(Column_1, 381, 1))),",
                "          {RAIL-ROUTE-CODE-GMS} = ltrim(rtrim(substring(Column_1, 382, 5))),",
                "          {RAIL-ROUTE-DESC-GMS} = ltrim(rtrim(substring(Column_1, 387, 47))),",
                "          {SCAC-CODE} = ltrim(rtrim(substring(Column_1, 434, 5))),",
                "          {VEHICLE-ID} = ltrim(rtrim(substring(Column_1, 439, 4))),",
                "          {VEHICLE-NO} = ltrim(rtrim(substring(Column_1, 443, 6))),",
                "          {FREIGHT-TERMS} = ltrim(rtrim(substring(Column_1, 449, 7))),",
                "          {FOB-INCOTERMS2} = ltrim(rtrim(substring(Column_1, 456, 2))),",
                "          EXPORT = ltrim(rtrim(substring(Column_1, 458, 1))),",
                "          {SHIP-FROM} = ltrim(rtrim(substring(Column_1, 459, 22))),",
                "          {SHIPPING-INSTR} = ltrim(rtrim(substring(Column_1, 481, 5))),",
                "          {SHIP-TO-NUMBER} = ltrim(rtrim(substring(Column_1, 486, 22))),",
                "          {ORDER-EQUIPMENT-TYPE} = ltrim(rtrim(substring(Column_1, 508, 30))),",
                "          {ACTUAL-EQUIPMENT-TYPE} = ltrim(rtrim(substring(Column_1, 538, 30))),",
                "          {MS-INTERPLANT-IND} = ltrim(rtrim(substring(Column_1, 568, 1))),",
                "          {ITEM-DATA} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+569), 821))),",
                "          {ORDER-NUMBER} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+569), 16))),",
                "          {MS9-ORDER-NUMBER} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+569), 13))),",
                "          {MATERIAL-ID} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+585), 18))),",
                "          {PRODUCT-DESC} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+603), 285))),",
                "          {PRODUCT-TYPE} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+888), 1))),",
                "          {GROSS-WEIGHT} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+889), 10))),",
                "          {GROSS-WEIGHT-RDF} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+889), 10))),",
                "          {NET-WEIGHT} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+899), 10))),",
                "          {NET-WEIGHT-RDF} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+899), 10))),",
                "          {WEIGHT-UOM} = ltrim(rtrim(substring(Column_1, (((toInteger(loop)-1)*821)+909), 3))),",
                "          {CUSTOMER-PART-NO} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+912),22))),",
                "          {COMPLETE-PARTIAL} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+934),1))),",
                "          {COIL-ID} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+935),12))),",
                "          {TAG-NO} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+947),18))),",
                "          {NUMBER-OF-PIECES} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+965),5))),",
                "          {SUPPLEMENTAL-INSTR} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+970),85))),",
                "          {ITEM-WEIGHT} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1055),8))),",
                "          {ITEM-WEIGHT-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1055),8))),",
                "          {UNIT-OF-MEASURE} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1063),3))),",
                "          SPEC = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1066),30))),",
                "          {SPEC-DESCRIPTION} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1096),17))),",
                "          {MET-LENGTH} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1113),12))),",
                "          {MET-LENGTH-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1113),12))),",
                "          {MET-WIDTH} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1125),12))),",
                "          {MET-WIDTH-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1125),12))),",
                "          {MET-GAUGE} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1137),12))),",
                "          {MET-GAUGE-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1130),12))),",
                "          {MET-WEIGHT} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1149),10))),",
                "          {MET-WEIGHT-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1149),10))),",
                "          {MET-THEO-WGT} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1159),10))),",
                "          {MET-THEO-WGT-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1159),10))),",
                "          {ENG-LENGTH} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1169),12))),",
                "          {ENG-LENGTH-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1162),12))),",
                "          {ENG-WIDTH} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1181),12))),",
                "          {ENG-WIDTH-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1169),12))),",
                "          {ENG-GAUGE} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1193),12))),",
                "          {ENG-GAUGE-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1193),12))),",
                "          {ENG-WEIGHT} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1205),10))),",
                "          {ENG-WEIGHT-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1205),10))),",
                "          {ENG-THEO-WEIGHT} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1215),10))),",
                "          {ENG-THEO-WEIGHT-RDF} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1215),10))),",
                "          {HEAT-NUMBER} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1225),9))),",
                "          {ACCT-GRADE} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1320),3))),",
                "          {PRODUCT-ACCOUNT} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1323),4))),",
                "          {MDSE-SALES-CODE} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1327),3))),",
                "          {MS9-SAP-ORDER} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1330),10))),",
                "          {MS9-ABBREV-PROD-NAME} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1340),8))),",
                "          {MS9-CUSTOMER-NBR} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1348),8))),",
                "          {MS9-SHIP-TO-TYPE} = ltrim(rtrim(substring(Column_1,(((toInteger(loop)-1)*821)+1356),9))),",
                "          column_4 = ltrim(rtrim(substring(Column_1, 124, 149))),",
                "          column_5 = ltrim(rtrim(substring(Column_1, 150, 170))),",
                "          column_6 = ltrim(rtrim(substring(Column_1, 171, 220))),",
                "          column_7 = ltrim(rtrim(substring(Column_1, 221, 229))),",
                "          column_8 = ltrim(rtrim(substring(Column_1, 230, 238))),",
                "          column_9 = ltrim(rtrim(substring(Column_1, 239, 240))),",
                "          column_10 = ltrim(rtrim(substring(Column_1, 241, 243))),",
                "          column_11 = ltrim(rtrim(substring(Column_1, 244, 245))),",
                "          column_12 = ltrim(rtrim(substring(Column_1, 246, 247))),",
                "          column_13 = ltrim(rtrim(substring(Column_1, 248, 318))),",
                "          column_14 = ltrim(rtrim(substring(Column_1, 319, 320))),",
                "          column_15 = ltrim(rtrim(substring(Column_1, 321, 322))),",
                "          column_16 = ltrim(rtrim(substring(Column_1, 323, 343))),",
                "          column_17 = ltrim(rtrim(substring(Column_1, 344, 349))),",
                "          column_18 = ltrim(rtrim(substring(Column_1, 350, 355))),",
                "          column_19 = ltrim(rtrim(substring(Column_1, 356, 359))),",
                "          column_20 = ltrim(rtrim(substring(Column_1, 360, 368))),",
                "          column_21 = ltrim(rtrim(substring(Column_1, 369, 377))),",
                "          column_22 = ltrim(rtrim(substring(Column_1, 378, 386))),",
                "          column_23 = ltrim(rtrim(substring(Column_1, 387, 395))),",
                "          column_24 = ltrim(rtrim(substring(Column_1, 396, 416))),",
                "          column_25 = ltrim(rtrim(substring(Column_1, 417, 419))),",
                "          column_26 = ltrim(rtrim(substring(Column_1, 420, 422))),",
                "          column_27 = ltrim(rtrim(substring(Column_1, 423, 424))),",
                "          column_28 = ltrim(rtrim(substring(Column_1, 425, 426))),",
                "          column_29 = ltrim(rtrim(substring(Column_1, 427, 432))),",
                "          column_30 = ltrim(rtrim(substring(Column_1, 433, 480))),",
                "          column_31 = ltrim(rtrim(substring(Column_1, 481, 486))),",
                "          column_32 = ltrim(rtrim(substring(Column_1, 487, 491))),",
                "          column_33 = ltrim(rtrim(substring(Column_1, 492, 499))),",
                "          column_34 = ltrim(rtrim(substring(Column_1, 500, 502))),",
                "          column_35 = ltrim(rtrim(substring(Column_1, 503, 504))),",
                "          column_36 = ltrim(rtrim(substring(Column_1, 505, 527))),",
                "          column_37 = ltrim(rtrim(substring(Column_1, 528, 533))),",
                "          column_38 = ltrim(rtrim(substring(Column_1, 534, 556))),",
                "          column_39 = ltrim(rtrim(substring(Column_1, 557, 587))),",
                "          column_40 = ltrim(rtrim(substring(Column_1, 588, 618))),",
                "          column_41 = ltrim(rtrim(substring(Column_1, 619, 620))),",
                "          column_42 = ltrim(rtrim(substring(Column_1, 621, 636))),",
                "          column_43 = ltrim(rtrim(substring(Column_1, 637, 655))),",
                "          column_44 = ltrim(rtrim(substring(Column_1, 656, 941))),",
                "          column_45 = ltrim(rtrim(substring(Column_1, 942, 943))),",
                "          column_46 = ltrim(rtrim(substring(Column_1, 944, 954))),",
                "          column_47 = ltrim(rtrim(substring(Column_1, 955, 965))),",
                "          column_48 = ltrim(rtrim(substring(Column_1, 966, 976))),",
                "          column_49 = ltrim(rtrim(substring(Column_1, 977, 987))),",
                "          column_50 = ltrim(rtrim(substring(Column_1, 988, 991))),",
                "          column_51 = ltrim(rtrim(substring(Column_1, 992, 1014))),",
                "          column_52 = ltrim(rtrim(substring(Column_1, 1015, 1016))),",
                "          column_53 = ltrim(rtrim(substring(Column_1, 1017, 1029))),",
                "          column_54 = ltrim(rtrim(substring(Column_1, 1030, 1048))),",
                "          column_55 = ltrim(rtrim(substring(Column_1, 1049, 1054))),",
                "          column_56 = ltrim(rtrim(substring(Column_1, 1055, 1140))),",
                "          column_57 = ltrim(rtrim(substring(Column_1, 1141, 1149))),",
                "          column_58 = ltrim(rtrim(substring(Column_1, 1150, 1158))),",
                "          column_59 = ltrim(rtrim(substring(Column_1, 1159, 1162))),",
                "          column_60 = ltrim(rtrim(substring(Column_1, 1163, 1193))),",
                "          column_61 = ltrim(rtrim(substring(Column_1, 1194, 1211))),",
                "          column_62 = ltrim(rtrim(substring(Column_1, 1213, 1225))),",
                "          column_63 = ltrim(rtrim(substring(Column_1, 1226, 1238))),",
                "          {column-64} = ltrim(rtrim(substring(Column_1, 1239, 1251))),",
                "          column_65 = ltrim(rtrim(substring(Column_1, 1252, 1264))),",
                "          column_66 = ltrim(rtrim(substring(Column_1, 1265, 1277))),",
                "          column_67 = ltrim(rtrim(substring(Column_1, 1278, 1290))),",
                "          column_68 = ltrim(rtrim(substring(Column_1, 1291, 1301))),",
                "          column_69 = ltrim(rtrim(substring(Column_1, 1302, 1312))),",
                "          column_70 = ltrim(rtrim(substring(Column_1, 1313, 1323))),",
                "          column_71 = ltrim(rtrim(substring(Column_1, 1324, 1334))),",
                "          column_72 = ltrim(rtrim(substring(Column_1, 1335, 1347))),",
                "          column_73 = ltrim(rtrim(substring(Column_1, 1348, 1360))),",
                "          column_74 = ltrim(rtrim(substring(Column_1, 1361, 1373))),",
                "          column_75 = ltrim(rtrim(substring(Column_1, 1374, 1386))),",
                "          column_76 = ltrim(rtrim(substring(Column_1, 1387, 1399))),",
                "          column_77 = ltrim(rtrim(substring(Column_1, 1400, 1412))),",
                "          column_78 = ltrim(rtrim(substring(Column_1, 1413, 1423))),",
                "          column_79 = ltrim(rtrim(substring(Column_1, 1424, 1434))),",
                "          column_80 = ltrim(rtrim(substring(Column_1, 1435, 1445))),",
                "          column_81 = ltrim(rtrim(substring(Column_1, 1446, 1456))),",
                "          column_82 = ltrim(rtrim(substring(Column_1, 1457, 1466)))) ~> DerivedColumnBhCopybook",
                "SplitBasedOnBol@ValidBols select(mapColumn(",
                "          Header_Type = {HEADER-TYPE},",
                "          Trans_type = {TRANS-TYPE},",
                "          Serial_key = SplitBasedOnBol@ValidBols@{SERIAL-KEY},",
                "          Message_Created_Date = {MESSAGE-CREATE-DATE},",
                "          Created_By = {CREATED-BY},",
                "          Message_guid = {MESSAGE-GUID},",
                "          Shipment_Date = SplitBasedOnBol@ValidBols@{SHIPMENT-DATE},",
                "          Shipment_Time = {SHIPMENT-TIME},",
                "          Shipment_type = {SHIPMENT-TYPE},",
                "          Action_Flag = {ACTION-FLAG},",
                "          Op_Involved = {OP-INVOLVED},",
                "          Bol_Combined_Flag = {BOL-COMBINED-FLAG},",
                "          Bol_Combined_with = {BOL-COMBINED-WITH},",
                "          Ship_complete = {SHIP-COMPLETE},",
                "          BOL_Number = {BOL-NUMBER},",
                "          Total_No_Items = {TOTAL-NO-ITEMS},",
                "          Total_No_Items_Rdf = {TOTAL-NO-ITEMS-RDF},",
                "          Unit_of_Measure_1 = {UNIT-OF-MEASURE-1},",
                "          Bol_Wgt = {BOL-WGT},",
                "          Bol_Wgt_Rdf = {BOL-WGT-RDF},",
                "          Actual_wgt = {ACTUAL-WGT},",
                "          Actual_wgt_Rdf = {ACTUAL-WGT-RDF},",
                "          Pack_Slip_No = {PACK-SLIP-NO},",
                "          Plant = PLANT,",
                "          Ship_mode = {SHIP-MODE},",
                "          Claim_Indicator = {CLAIM-INDICATOR},",
                "          Intercompany_Ind = {INTERCOMPANY-IND},",
                "          Rail_Route_Code_Gms = {RAIL-ROUTE-CODE-GMS},",
                "          Rail_Route_Desc_Gms = {RAIL-ROUTE-DESC-GMS},",
                "          SCAC_Code = {SCAC-CODE},",
                "          Vehicle_Id = {VEHICLE-ID},",
                "          {VEHICLE-NO},",
                "          Freight_terms = {FREIGHT-TERMS},",
                "          Fob_Incoterms2 = {FOB-INCOTERMS2},",
                "          Export = EXPORT,",
                "          Ship_From = {SHIP-FROM},",
                "          Shipping_Instr = {SHIPPING-INSTR},",
                "          Ship_To_Number = {SHIP-TO-NUMBER},",
                "          Order_equipment_Type = {ORDER-EQUIPMENT-TYPE},",
                "          Actual_Equipment_type = {ACTUAL-EQUIPMENT-TYPE},",
                "          Ms_Interplant_Ind = {MS-INTERPLANT-IND},",
                "          Item_Data = {ITEM-DATA},",
                "          Order_number = {ORDER-NUMBER},",
                "          {MS9-ORDER-NUMBER} = SplitBasedOnBol@ValidBols@{MS9-ORDER-NUMBER},",
                "          Material_ID = {MATERIAL-ID},",
                "          Product_Desc = {PRODUCT-DESC},",
                "          Product_Type = {PRODUCT-TYPE},",
                "          Gross_Weight = {GROSS-WEIGHT},",
                "          Gross_Weight_Rdf = {GROSS-WEIGHT-RDF},",
                "          Net_Weight = {NET-WEIGHT},",
                "          Net_Weight_Rdf = {NET-WEIGHT-RDF},",
                "          Weight_Uom = {WEIGHT-UOM},",
                "          Customer_Part_No = {CUSTOMER-PART-NO},",
                "          Complete_Partial = {COMPLETE-PARTIAL},",
                "          Coil_Id = {COIL-ID},",
                "          Tag_No = {TAG-NO},",
                "          Number_of_Pieces = {NUMBER-OF-PIECES},",
                "          Supplemental_Instr = {SUPPLEMENTAL-INSTR},",
                "          Item_Weight = {ITEM-WEIGHT},",
                "          Item_Weight_Rdf = {ITEM-WEIGHT-RDF},",
                "          Unit_of_Measure = {UNIT-OF-MEASURE},",
                "          Spec = SPEC,",
                "          Spec_Description = {SPEC-DESCRIPTION},",
                "          Met_Length = {MET-LENGTH},",
                "          Met_Length_Rdf = {MET-LENGTH-RDF},",
                "          Met_Width = {MET-WIDTH},",
                "          Met_Width_Rdf = {MET-WIDTH-RDF},",
                "          Met_Gauge = {MET-GAUGE},",
                "          Met_Gauge_Rdf = {MET-GAUGE-RDF},",
                "          Met_weight = {MET-WEIGHT},",
                "          Met_weight_Rdf = {MET-WEIGHT-RDF},",
                "          {Met-Theo-Wgt} = {MET-THEO-WGT},",
                "          {Met-Theo-Wgt_Rdf} = {MET-THEO-WGT-RDF},",
                "          {Eng-Length} = {ENG-LENGTH},",
                "          {Eng-Length_Rdf} = {ENG-LENGTH-RDF},",
                "          {Eng-Width} = {ENG-WIDTH},",
                "          {Eng-Width_Rdf} = {ENG-WIDTH-RDF},",
                "          {Eng-Gauge} = {ENG-GAUGE},",
                "          {Eng-Gauge_Rdf} = {ENG-GAUGE-RDF},",
                "          {Eng-Weight} = {ENG-WEIGHT},",
                "          {Eng-Weight_Rdf} = {ENG-WEIGHT-RDF},",
                "          {Eng-Theo-Weight} = {ENG-THEO-WEIGHT},",
                "          {Eng-Theo-Weight_Rdf} = {ENG-THEO-WEIGHT-RDF},",
                "          {Heat-Number} = {HEAT-NUMBER},",
                "          {ACCT-GRADE},",
                "          {PRODUCT-ACCOUNT},",
                "          {MDSE-SALES-CODE},",
                "          {MS9-SAP-ORDER},",
                "          {MS9-ABBREV-PROD-NAME},",
                "          {MS9-CUSTOMER-NBR},",
                "          {MS9-SHIP-TO-TYPE},",
                "          ORDER_SEQUENCE",
                "     ),",
                "     partitionBy('hash', 1),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> BronzeToSilverCopyBookselect",
                "BronzeSilvBhLfr derive(loop = mapLoop(toInteger(round(((length(Column_1)-568)/821),0,1)),#index)) ~> derivedColumn1",
                "derivedColumn1 foldDown(unroll(loop),",
                "     mapColumn(",
                "          Column_1,",
                "          loop",
                "     ),",
                "     skipDuplicateMapInputs: false,",
                "     skipDuplicateMapOutputs: false) ~> flatten1",
                "join1 split(left({BOL-NUMBER},4)!='084L'&&left({BOL-NUMBER},4)!='086L',",
                "     disjoint: false) ~> SplitBasedOnBol@(ValidBols, InvalidBols)",
                "BronzeToSilverCopyBookselect window(over(Serial_key),",
                "     asc(ORDER_SEQUENCE, true),",
                "     OrderRank = denseRank()) ~> OrderRank",
                "OrderRank derive(SOURCE_LOAD_NUMBER = iif(instr(BOL_Number,'/') > 0,\r",
                "concat(left(BOL_Number,11),\r",
                "iif(length(toString(OrderRank)) == 1, \r",
                "    concat('0',toString(OrderRank)),\r",
                "    toString(OrderRank)),\r",
                "iif(length(split(BOL_Number,'/')[2]) == 1,\r",
                "    concat('0',split(BOL_Number,'/')[2]),\r",
                "    split(BOL_Number,'/')[2]\r",
                "    )),\r",
                "BOL_Number),",
                "          Order_number = iif(substring(Order_number, 13, 1) == ' ',concat(substring(Order_number,1,11),toString(\"       \"),substring(Order_number,15,2)),\r",
                "concat(substring(Order_number,1,11),substring(Order_number,13,1),toString(\"      \"),substring(Order_number,15,2))\r",
                ")) ~> derivedColumn2",
                "DerivedColumnBhCopybook keyGenerate(output(ROW_SEQUENCE as long),",
                "     startAt: 1L,",
                "     stepValue: 1L) ~> RowSequence",
                "AggregateToGetFirstRecord window(asc(MIN_ROW_SEQUENCE, true),",
                "     ORDER_SEQUENCE = denseRank()) ~> DenseRankForSourceLoadNumber",
                "RowSequence aggregate(groupBy({SERIAL-KEY},",
                "          {SHIPMENT-DATE},",
                "          {MS9-ORDER-NUMBER}),",
                "     MIN_ROW_SEQUENCE = min(ROW_SEQUENCE)) ~> AggregateToGetFirstRecord",
                "DenseRankForSourceLoadNumber, DerivedColumnBhCopybook join(AggregateToGetFirstRecord@{SERIAL-KEY} == DerivedColumnBhCopybook@{SERIAL-KEY}",
                "     && AggregateToGetFirstRecord@{SHIPMENT-DATE} == DerivedColumnBhCopybook@{SHIPMENT-DATE}",
                "     && AggregateToGetFirstRecord@{MS9-ORDER-NUMBER} == DerivedColumnBhCopybook@{MS9-ORDER-NUMBER},",
                "     joinType:'inner',",
                "     matchType:'exact',",
                "     ignoreSpaces: false,",
                "     broadcast: 'auto')~> join1",
                "derivedColumn2 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     format: 'parquet',",
                "     partitionFileNames:[(concat('BH-LFR_',toString($PARAMETER_CURRENT_TIMESTAMP,'HHmmss'),'.parquet'))],",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     saveOrder: 0,",
                "     mapColumn(",
                "          Header_Type,",
                "          Trans_type,",
                "          Serial_key,",
                "          Message_Created_Date,",
                "          Created_By,",
                "          Message_guid,",
                "          Shipment_Date,",
                "          Shipment_Time,",
                "          Shipment_type,",
                "          Action_Flag,",
                "          Op_Involved,",
                "          Bol_Combined_Flag,",
                "          Bol_Combined_with,",
                "          Ship_complete,",
                "          BOL_Number,",
                "          Total_No_Items,",
                "          Total_No_Items_Rdf,",
                "          Unit_of_Measure_1,",
                "          Bol_Wgt,",
                "          Bol_Wgt_Rdf,",
                "          Actual_wgt,",
                "          Actual_wgt_Rdf,",
                "          Pack_Slip_No,",
                "          Plant,",
                "          Ship_mode,",
                "          Claim_Indicator,",
                "          Intercompany_Ind,",
                "          Rail_Route_Code_Gms,",
                "          Rail_Route_Desc_Gms,",
                "          SCAC_Code,",
                "          Vehicle_Id,",
                "          {VEHICLE-NO},",
                "          Freight_terms,",
                "          Fob_Incoterms2,",
                "          Export,",
                "          Ship_From,",
                "          Shipping_Instr,",
                "          Ship_To_Number,",
                "          Order_equipment_Type,",
                "          Actual_Equipment_type,",
                "          Ms_Interplant_Ind,",
                "          Item_Data,",
                "          Order_number,",
                "          {MS9-ORDER-NUMBER},",
                "          Material_ID,",
                "          Product_Desc,",
                "          Product_Type,",
                "          Gross_Weight,",
                "          Gross_Weight_Rdf,",
                "          Net_Weight,",
                "          Net_Weight_Rdf,",
                "          Weight_Uom,",
                "          Customer_Part_No,",
                "          Complete_Partial,",
                "          Coil_Id,",
                "          Tag_No,",
                "          Number_of_Pieces,",
                "          Supplemental_Instr,",
                "          Item_Weight,",
                "          Item_Weight_Rdf,",
                "          Unit_of_Measure,",
                "          Spec,",
                "          Spec_Description,",
                "          Met_Length,",
                "          Met_Length_Rdf,",
                "          Met_Width,",
                "          Met_Width_Rdf,",
                "          Met_Gauge,",
                "          Met_Gauge_Rdf,",
                "          Met_weight,",
                "          Met_weight_Rdf,",
                "          {Met-Theo-Wgt},",
                "          {Met-Theo-Wgt_Rdf},",
                "          {Eng-Length},",
                "          {Eng-Length_Rdf},",
                "          {Eng-Width},",
                "          {Eng-Width_Rdf},",
                "          {Eng-Gauge},",
                "          {Eng-Gauge_Rdf},",
                "          {Eng-Weight},",
                "          {Eng-Weight_Rdf},",
                "          {Eng-Theo-Weight},",
                "          {Eng-Theo-Weight_Rdf},",
                "          {Heat-Number},",
                "          {ACCT-GRADE},",
                "          {PRODUCT-ACCOUNT},",
                "          {MDSE-SALES-CODE},",
                "          {MS9-SAP-ORDER},",
                "          {MS9-ABBREV-PROD-NAME},",
                "          {MS9-CUSTOMER-NBR},",
                "          {MS9-SHIP-TO-TYPE},",
                "          SOURCE_LOAD_NUMBER",
                "     ),",
                "     partitionBy('hash', 1)) ~> BronzesilvBHLfrsink"
            ]
        }
    }
}